// Дана квадратная матрица. Проверить, является ли она симметричной относительно главной диагонали


Console.WriteLine("Введите 2 одинаковых целых числа для определения размера массива (первое число определяет количество строк, второе - количество столбцов (количество столбцов и строк должно быть больше 1): "); // по определению симметричным массив может быть только при условии, что количество строк и столбцов совпадают
string? user = Console.ReadLine();
Console.WriteLine(); // для отделения длины массива по строкам и столбцам от самого массива с конкретными элементами
int n = int.Parse(user.Split(' ', StringSplitOptions.RemoveEmptyEntries)[0]);
int m = int.Parse(user.Split(' ', StringSplitOptions.RemoveEmptyEntries)[1]);
if (n == 1) n = n + 1; if (m == 1) m = m + 1; // массив с одной строкой нельзя считать двумерным (матрицей), равно как и массив с одним столбцом
if (n != m)
{
    if (n > m && (n - m) > 1)
    {
        Console.WriteLine($"Для соблюдения симметрии двумерного массива относительно главной диагонали массив должен быть на {n - m} строк(и) короче (c текущим количеством столбцов, равным {m})");
    }
    if (m > n && (m - n) > 1)
    {
        Console.WriteLine($"Для соблюдения симметрии двумерного массива относительно главной диагонали массив должен быть на {m - n} столбца (столбцов) короче (c текущим количеством строк, равным {n})");
    }
}

if (n > 1 && m > 1 && n == m)
{
    int[,] symmetricArray = new int[n, m];

    Console.WriteLine($"Введите {n} чисел подряд одной строкой через пробел и {m} чисел подряд через клавишу Enter для заполнения столбцов массива: ");
    for (int i = 0; i < n; i++)
    {
        user = Console.ReadLine();
        string[] splitArr = user.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        for (int j = 0; j < splitArr.Length; j++)
        {
            symmetricArray[i, j] = int.Parse(splitArr[j]);
        }
    }
    Console.WriteLine(); Console.WriteLine("Ваш массив выглядит так: ");

    for (int i = 0; i < symmetricArray.GetLength(0); i++)
    {
        for (int j = 0; j < symmetricArray.GetLength(1); j++)
        {
            Console.Write($"{symmetricArray[i, j]} ");
        }
        Console.WriteLine();
    }
    Console.WriteLine(); Console.WriteLine($"Данный массив можно считать симметричным относительно главной диагонали (относительно чисел {symmetricArray[n - n, n - n]}, {symmetricArray[n - n + 1, n - n + 1]}, {symmetricArray[n - n + 2, n - n + 2]}, ... , {symmetricArray[n - 1, n - 1]}, ), поскольку количество элементов на {n - n} строке, расположенных справа от элемента, расположенного на главной диагонали равняется количеству элементов на {n - 1} строке, расположенных слева от элемента, расположенного на главной диагонали. При соблюдении этого условия элементы, расположенные на строках с {n + 1 - n} по {n - 2} включительно также будут расположены симметрично относительно главной диагонали."); // не до конца проработан сценарий с вводом массивов разной величины и вывода всех чисел на главной диагонали с привязкой к величине массива по длине и ширине.
}